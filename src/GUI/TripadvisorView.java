/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Color;
import java.awt.FlowLayout;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Locale;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JScrollPane;
import org.apache.commons.lang.StringUtils;
import org.apache.lucene.document.Document;
import org.apache.lucene.facet.FacetResult;
import org.apache.lucene.facet.LabelAndValue;
import org.apache.tika.exception.TikaException;
import org.xml.sax.SAXException;
import stemmerprueba.Lanzador;
import stemmerprueba.LuceneManager;
import stemmerprueba.LuceneSearcher;

/**
 *
 * @author Antonio,Rodrigo,Nourdine,Antonio
 */
public class TripadvisorView extends javax.swing.JFrame {

    /**
     * Creates new form TripadvisorView
     */
    private Lanzador tikaObjectModel;

    ////////////// SEARCHER ///////////////////////////////
    private LuceneSearcher general_manager;

    //VARIABLES PARA EL ALMACENAMIENTO DE INDICES DE PATH
    private String cabecera = "";
    private String comment = "";

    public String getCabecera() {
        return cabecera;
    }

    public void setCabecera(String c) {
        this.cabecera = c;
    }

    public String getComment() {
        return comment;
    }

    public void setComment(String c) {
        this.comment = c;
    }

    public void CreateManager() throws IOException {
        general_manager = new LuceneSearcher();
    }

    public LuceneSearcher GetManager() {
        return general_manager;
    }
//    public LuceneManager GetLuceneManager(){
//        return general_lucene_manager;
//    }

    public void setTikaObject(Lanzador t) {

        tikaObjectModel = t;

    }

    public TripadvisorView() {
        initComponents();
        jButton1.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jLabel6.setText("Indexe Dataset o Seleccione Índice");
        jEditorPane1.setCaretPosition(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldBuscador = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), Float.valueOf(5.0f), Float.valueOf(0.1f)));

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), Float.valueOf(5.0f), Float.valueOf(0.1f)));

        jLabel2.setText("Estrellas");

        jLabel1.setText("Hasta");

        jTextFieldBuscador.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jTextFieldBuscadorComponentHidden(evt);
            }
        });
        jTextFieldBuscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBuscadorActionPerformed(evt);
            }
        });

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jEditorPane1.setFont(new java.awt.Font("FreeSans", 0, 12)); // NOI18N
        jEditorPane1.setMargin(new java.awt.Insets(3, 6, 3, 10));
        jScrollPane1.setViewportView(jEditorPane1);

        jLabel5.setText("Hasta");

        jButton1.setText("Búsqueda");
        jButton1.setActionCommand("Indexar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscar(evt);
            }
        });

        jButton4.setText("Filtro por Fechas");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setText("Filtrar Precio Ascendente");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3jButtonIndexar(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton3)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jTextFieldBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );

        jList1.setBackground(new java.awt.Color(242, 241, 240));
        jList1.setFont(new java.awt.Font("FreeSans", 0, 14)); // NOI18N
        jList1.setForeground(new java.awt.Color(1, 7, 229));
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setAutoscrolls(false);
        jList1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Seleccione categoría (Rating Location)");

        jLabel3.setText("Selected hotel rating: ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        jButton2.setText("Indexar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2jButtonIndexar(evt);
            }
        });

        jButton5.setText("Seleccionar Índice");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5jButtonIndexar(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel6.setBackground(java.awt.Color.lightGray);
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 31, Short.MAX_VALUE)))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateModel(LuceneSearcher manager) throws IOException, org.apache.lucene.queryparser.classic.ParseException {
        DefaultListModel<String> model = new DefaultListModel();
        List<FacetResult> facetas = manager.search_facets();
        LabelAndValue[] labelsvalues = facetas.get(0).labelValues;
        String rating = "";

        for (LabelAndValue lv : labelsvalues) {
            if (lv.label.equals("-1")) {
                rating = "*-1* Desconocido";
                model.addElement("Hotel Rating " + rating + " (" + lv.value + ")");
            } else {
                rating = lv.label;
                model.addElement("Hotel Rating *" + rating + "* (" + lv.value + ")");
            }

        }

        jList1.setModel(model);
    }

    public String quitaEspacios(String texto) {
        java.util.StringTokenizer tokens = new java.util.StringTokenizer(texto);
        texto = "";
        while (tokens.hasMoreTokens()) {
            texto += " " + tokens.nextToken();
        }
        texto = texto.toString();
        texto = texto.trim();
        return texto;
    }

    public static String selectData(int origen) throws IOException {
        String nombre = "";
        JFileChooser MI_ARCHIVO = new JFileChooser(System.getProperty("user.dir"));

        if (origen == 0) {
            MI_ARCHIVO.setDialogTitle("Seleccione directorio de donde tomar el DATASET");
            MI_ARCHIVO.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        }

        MI_ARCHIVO.showOpenDialog(MI_ARCHIVO);
        File SELECTOR_FICHEROS = MI_ARCHIVO.getSelectedFile();

        if (SELECTOR_FICHEROS != null) {
            nombre = MI_ARCHIVO.getSelectedFile().getPath();
        } else {
            System.out.println("HASTA PRONTO:");
            System.out.println("No se ha seleccionado la ubicación requerida");
            System.exit(1);
        }

        return nombre;
    }

    public void indexa() throws Exception {

        String dataset = selectData(0);
        File dir = new File(dataset);
        File[] files = dir.listFiles();

        jButton5.setEnabled(false);
        jLabel6.setText("Indexando.... ");
        jLabel7.setText("Espere unos instantes");
        LuceneManager manager = new LuceneManager();

        int id = 0;

        for (File file : files) {
            manager.createIndex(file, id);

            id++;
        }

        manager.closeWriter();
        //SELECCIÓN DE LA DIRECCIÓN DE LOS INDICES (PUEDE SER LA CREADA U OTRA)
        jLabel6.setText("Indexación Finalizada");
        jLabel7.setText("Seleccione Índices....");
        selectIndexes(1);
        selectIndexes(2);
        jLabel7.setText("Índices Seleccionados");
    }

    public void selectIndexes(int refdir) throws Exception {

        String nombre;
        JFileChooser MI_ARCHIVO = new JFileChooser(System.getProperty("user.dir"));

        if (refdir == 1) {
            CreateManager();
            MI_ARCHIVO.setDialogTitle("Selector de carpeta del índice de comentarios");
            MI_ARCHIVO.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        } else if (refdir == 2) {
            MI_ARCHIVO.setDialogTitle("Selector de carpeta del índice de cabeceras");
            MI_ARCHIVO.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        }

        MI_ARCHIVO.showOpenDialog(MI_ARCHIVO);
        File SELECTOR_FICHEROS = MI_ARCHIVO.getSelectedFile();

        if (SELECTOR_FICHEROS != null) {
            nombre = MI_ARCHIVO.getSelectedFile().getPath();

            if (refdir == 1) {
                setComment(nombre);
                general_manager.setPathComment(comment);
            } else if (refdir == 2) {
                setCabecera(nombre);
                general_manager.setPathHeader(cabecera);
            }
        } else {
            System.out.println("No se ha seleccionado la ubicación requerida");
            System.exit(1);
        }
    }

    private void jButtonBuscar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscar
        try {
            jLabel3.setText("Select hotel rating: " + "-");
            String words = jTextFieldBuscador.getText().toLowerCase();
            System.out.println("word" + words);
            String sin_espacios = quitaEspacios(words);
            words = sin_espacios;
            System.out.println("word->" + words);
            StringTokenizer st = new StringTokenizer(words);
            jEditorPane1.setCaretPosition(0);

            float value_initial = (float) jSpinner1.getValue();
            float value_final = (float) jSpinner2.getValue();
            String res_doc;
            System.out.println("rate ini: " + value_initial + " rate fin: " + value_final);

            //control de busqueda sin selección de índices
            //CreateManager();
            System.out.println("Antes de buscar... comentarios en :" + general_manager.getIndexPath());
            System.out.println("Antes de buscar... headers en :" + general_manager.getIndexHeaderPath());

            if (general_manager.getIndexPath().contains("unknown") || general_manager.getIndexHeaderPath().contains("unknown")) {
                jEditorPane1.setForeground(Color.red);
                jEditorPane1.setText("Es necesario seleccionar los Índices");
            } else if (st.countTokens() == 1) {

                res_doc = general_manager.buscarDocumentosTerminos(words);
                if (value_initial == 0.0 && value_final == 0.0) {
                    jEditorPane1.setText(res_doc);
                } else {
                    String res_doc2 = general_manager.filterByRank(value_initial, value_final);
                    jEditorPane1.setText(res_doc2);
                }

                UpdateModel(general_manager);

            } else if (st.countTokens() > 1) {
                res_doc = general_manager.buscarDocumentosProximidad(words);
                if (value_initial == 0.0 && value_final == 0.0) {
                    if (words.contains("\"")) {
                        String busqueda = jTextFieldBuscador.getText();
                        res_doc = general_manager.buscarDocumentosProximidad(busqueda);
                        jEditorPane1.setText(res_doc);
                    } else {
                        jEditorPane1.setText(res_doc);
                    }
                } /**
                 * *******************AÑADO ESTO*****************
                 */
                else if (words.contains("\"")) {
                    
                    
                    String busqueda = jTextFieldBuscador.getText();
                  
                    System.out.println(busqueda);
                   

                    res_doc = general_manager.buscarDocumentosProximidad(busqueda);
                    jEditorPane1.setText(res_doc);
                } /**
                 * *************** HASTA AQUI ************
                 */
                else {
                    String res_doc2 = general_manager.filterByRank(value_initial, value_final);
                    jEditorPane1.setText(res_doc2);
                }

                UpdateModel(general_manager);
            }

        } catch (IOException | SAXException | TikaException | ParseException | org.apache.lucene.queryparser.classic.ParseException ex) {
            Logger.getLogger(TripadvisorView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonBuscar


    private void jTextFieldBuscadorComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTextFieldBuscadorComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBuscadorComponentHidden

    private void jTextFieldBuscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBuscadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBuscadorActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        String rating = StringUtils.substringBetween(jList1.getSelectedValue(), "*", "*");
        jLabel3.setText("Selected hotel rating: " + rating);
        LuceneSearcher manager = GetManager();
        jEditorPane1.setCaretPosition(0);

        try {
            //System.out.println("por acaaaa"+ jTextFieldBuscador.getText());
            String words = jTextFieldBuscador.getText().toLowerCase();
            StringTokenizer st = new StringTokenizer(words);
            String res_doc;
            res_doc = manager.drillDown(rating);

            jEditorPane1.setText(res_doc);
            UpdateModel(manager);

        } catch (IOException | org.apache.lucene.queryparser.classic.ParseException ex) {
            Logger.getLogger(TripadvisorView.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jList1MouseClicked

    private void jButton2jButtonIndexar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2jButtonIndexar

        try {

            indexa();
            jButton1.setEnabled(true);
            jButton3.setEnabled(true);
            jButton4.setEnabled(true);
            jButton5.setEnabled(true);
        } catch (Exception ex) {
            Logger.getLogger(TripadvisorView.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton2jButtonIndexar

    private void jButton3jButtonIndexar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3jButtonIndexar

        LuceneSearcher manager = GetManager();
        String res_doc;

        try {
            res_doc = manager.PriceOrder();
            jEditorPane1.setText(res_doc);
        } catch (IOException ex) {
            Logger.getLogger(TripadvisorView.class.getName()).log(Level.SEVERE, null, ex);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3jButtonIndexar

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        LuceneSearcher manager = GetManager();
        String res_doc3;

        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd", Locale.getDefault());
            String dini = "20000101";
            String dfin = "20161230";

            if (jDateChooser1.getDate() != null && jDateChooser2.getDate() != null) {
                dini = sdf.format(jDateChooser1.getDate());
                dfin = sdf.format(jDateChooser2.getDate());
                System.out.println("Date: " + dini + " -- " + dfin);
                res_doc3 = manager.dateQuery(dini, dfin);
                jEditorPane1.setText(res_doc3);
            } else if (jDateChooser1.getDate() == null && jDateChooser2.getDate() != null) {
                dfin = sdf.format(jDateChooser2.getDate());
                res_doc3 = manager.dateQuery(dini, dfin);
                jEditorPane1.setText(res_doc3);
            } else if (jDateChooser1.getDate() != null && jDateChooser2.getDate() == null) {
                dini = sdf.format(jDateChooser1.getDate());
                res_doc3 = manager.dateQuery(dini, dfin);
                jEditorPane1.setText(res_doc3);
            } else {
                res_doc3 = manager.dateQuery(dini, dfin);
                System.out.println("Vacio - Date: " + dini + " -- " + dfin);
                jEditorPane1.setText(res_doc3);
            }
        } catch (IOException | ParseException ex) {
            Logger.getLogger(TripadvisorView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5jButtonIndexar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5jButtonIndexar
        try {
            selectIndexes(1);
            selectIndexes(2);
            jButton1.setEnabled(true);
            jButton3.setEnabled(true);
            jButton4.setEnabled(true);
            jLabel7.setText("Índices Seleccionados");
        } catch (Exception ex) {
            jLabel7.setText("Inténtelo de nuevo");
            Logger.getLogger(TripadvisorView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5jButtonIndexar

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(TripadvisorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(TripadvisorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(TripadvisorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(TripadvisorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new TripadvisorView().setVisible(true);
//            }
//        });
//    }
    public void showView(/*String args[]*/) {
        this.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTextField jTextFieldBuscador;
    // End of variables declaration//GEN-END:variables
}
